using System.Collections;
using System.Collections.Generic;
using UnityEngine;

    #ROOTNAMESPACEBEGIN#

/// <summary>
/// 
/// </summary>
public class #SCRIPTNAME# : StateMachineBehaviour
{

    /// <summary>
    /// Called before OnStateEnter is called on any state inside this state machine.
    /// </summary>
    override public void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    {
        #NOTRIM#
    }

    /// <summary>
    /// Called before OnStateUpdate is called on any state inside this state machine.
    /// </summary>
    override public void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    {
        #NOTRIM#
    }

    /// <summary>
    /// Called before OnStateExit is called on any state inside this state machine.
    /// </summary>
    override public void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    {
        #NOTRIM#
    }

    /// <summary>
    /// Called before OnStateMove is called on any state inside this state machine.
    /// </summary>
    override public void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    {
        #NOTRIM#
    }

    /// <summary>
    /// Called before <see cref="StateMachineBehaviour.OnStateIK()"/> is called on any state inside this state machine.
    /// </summary>
    //override public void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    // {
        #NOTRIM#
    // }

    /// <summary>
    /// Called when entering a state machine via its Entry Node.
    /// </summary>
    //override public void OnStateMachineEnter(Animator animator, int stateMachinePathHash)
    // {
        #NOTRIM#
    // }

    /// <summary>
    /// Called when exiting a state machine via its Exit Node.
    /// </summary>
    //override public void OnStateMachineExit(Animator animator, int stateMachinePathHash)
    // {
        #NOTRIM#
    // }

}

#ROOTNAMESPACEEND#